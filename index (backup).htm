<!DOCTYPE html>
<html>
  <head>

    <!-- Automatically updated by your package.json file. -->
    <title class="applicationTitle">Your Application Name</title>

    <link rel="icon" type="image/x-icon" href="_img/favicon.ico">
    <link rel="stylesheet" href="_style/ven.bootstrap.css">
    <!-- Change this next line from cerulean to whatever swatch you pick. -->
    <link rel="stylesheet" href="_style/ven.bootswatch/cerulean.min.css" data-swatch="swapper">
    <link rel="stylesheet" href="_style/ugui-devtools.css">
    <link rel="stylesheet" href="_style/style.css">

    <!-- UGUI requires jQuery 1.9.1 or above. -->
    <script type="text/javascript" src="_scripts/ven.jquery-2.1.1.min.js"></script>
    <script type="text/javascript" src="_scripts/ven.bootstrap-3.2.0.min.js"></script>
    <script type="text/javascript" src="_scripts/ven.dropdowns-enhancement.js"></script>
    <script type="text/javascript" src="_scripts/ven.bootstrap-slider.min.js"></script>
    <script type="text/javascript" src="_scripts/ugui.js"></script>
    <script type="text/javascript" src="_scripts/app.js"></script>







    <!--
      /////////////////////////////////////////////////////////////////
      //                                                             //
      //              COMMAND LINE ARGUMENT UI BINDINGS              //
      //                                                             //
      /////////////////////////////////////////////////////////////////
      // The order of these arguments controls the order they will   //
      // be sent out to the command line. If you place a name inside //
      // double parenthesis like ((cows)) it will automatically be   //
      // replaced by the value of the element in the #argsForm with  //
      // a matching data-argName="cows".                             //
      //                                                             //
      // Input tags with a type of "file" will also automatically be //
      // parsed into several sub-arguments for your ease of use such //
      // as path, name, ext, size, lastModifiedDate, etc.            //
      //                                                             //
      // If you need the value of an element parsed for you supply a //
      // definition. Consult the UGUI documentation for detailed     //
      // information and instructions on how this feature works.     //
      /////////////////////////////////////////////////////////////////
    -->

    <cmd executable="cli_filename">

      <arg>"((folderPicker.folderName))"</arg>

      <arg>((catSoundsMeow))</arg>
      <arg>((catSoundsPurr))</arg>
      <arg>((catSoundsNyan))</arg>

      <arg>--speed ((speedVsQuality))mph</arg>

      <arg>The best ((fruitPlum)) around!</arg>
      <arg>((fruitKiwi))</arg>
      <arg>((fruitPear))</arg>

      <arg>((vegPotato))</arg>
      <arg>((vegCarrot))</arg>
      <arg>((vegCelery))</arg>
      <arg>((vegGinger))</arg>

      <arg>--dogsound=((dogSounds))</arg>

      <def name="quality">((min)),((max))</def>
      <arg>((quality.min))-((quality.max))</arg>

      <arg>-m "((userMessage))"</arg>

      <arg>((colorful.rgb))</arg>

      <arg>"((fileToProcess.path))((fileToProcess.name)).new.((fileToProcess.ext))"</arg>

    </cmd>

    <cmd executable="second_cli">
      <arg>((winewhite)) "((winetext))"</arg>
    </cmd>

  </head>







  <!-- Change the class form dev to prod when you're ready to distribute your application. -->
  <body role="document" class="dev">







      <!--
        /////////////////////////////////////////////////////////////////
        //                                                             //
        //                         NAVIGATION                          //
        //                                                             //
        /////////////////////////////////////////////////////////////////
        // Top bar navigation. Some parts are only visible when in dev //
        // mode. Be sure to change the body class to prod before you   //
        // distribute your app.                                        //
        /////////////////////////////////////////////////////////////////
      -->

    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand">
            <img src="_img/logo.png" alt="Logo" />
            <span class="applicationTitle">Your Application Name</span>
          </a>
        </div>
        <div class="navbar-collapse collapse">
          <ul class="nav navbar-nav">
            <li class="dropdown">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown">File <span class="caret"></span></a>
              <ul class="dropdown-menu" role="menu">
                <li><a href="#save" class="save-ugui-settings">Save Settings</a></li>
                <li><a href="#load" class="load-ugui-settings">Load Settings</a></li>
                <li><a href="#exit">Exit</a></li>
              </ul>
            </li>
            <li class="dropdown devNav">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown">View <span class="caret"></span></a>
              <ul class="dropdown-menu" role="menu">
                <li><a href="#fullscreen">Fullscreen</a></li>
                <!-- devNav items are hidden when in Production mode -->
                <li class="devNav"><a href="#console">Console</a></li>
                <li class="divider"></li>
                <li class="devNav"><a href="#cmdoutput">Command Line Output</a></li>
              </ul>
            </li>
            <li class="dropdown navHelp">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown">Help <span class="caret"></span></a>
              <ul class="dropdown-menu" role="menu">
                <!-- <a href="#about"> must exist in your app as it contains the credits for UGUI -->
                <li><a href="#about">About</a></li>
              </ul>
            </li>
          </ul>
        </div><!--/.nav-collapse -->
      </div>
    </nav>







      <!--
        /////////////////////////////////////////////////////////////////
        //                                                             //
        //              APPLICATION NAME AND DESCRIPTION               //
        //                                                             //
        /////////////////////////////////////////////////////////////////
        // This is automatically replaced by the content in your       //
        // package.json file.                                          //
        /////////////////////////////////////////////////////////////////
      -->

    <div class="container" role="main">

      <header>
        <h3>
          <span class="applicationTitle">Your Application Name</span>
          <small class="applicationDescription">Short description or tagline</small>
        </h3>
      </header>







      <!--
        /////////////////////////////////////////////////////////////////
        //                                                             //
        //                      CLI FORM ELEMENTS                      //
        //                                                             //
        /////////////////////////////////////////////////////////////////
        // All form elements used to send commands to your executable  //
        // must be placed in the argsForm below.                       //
        /////////////////////////////////////////////////////////////////
      -->

      <section>
        <form id="cli_filename" role="form-inline">

          <div class="ezdz form-group jumbotron text-center well h3" title="Click to browse for your file.">
            <span class="imageContainer"></span>
            <label class="text-info h3 truncate" data-content="Dropped">Drag and Drop your file here.</label>
            <input data-argName="fileToProcess" required="required" type="file" />
          </div>

          <div class="row">
            <div class="col-xs-6 col-s-3 col-md-3 col-l-3 radio">
              <label><input type="radio" name="radioDials" data-argName="catSoundsMeow" value="-meow" /> Meow</label><br />
              <label><input type="radio" name="radioDials" data-argName="catSoundsPurr" value="-purr" /> Purr</label><br />
              <label><input type="radio" name="radioDials" data-argName="catSoundsNyan" value="-nyan" /> Nyan</label>
            </div>
            <div class="col-xs-6 col-s-3 col-md-3 col-l-3 checkbox">
              <label><input type="checkbox" data-argName="fruitPlum" value="-plum" />Plum</label><br />
              <label><input type="checkbox" data-argName="fruitKiwi" value="-kiwi" />Kiwi</label><br />
              <label><input type="checkbox" data-argName="fruitPear" value="-pear" />Pear</label>
            </div>
            <div class="col-xs-6 col-s-3 col-md-3 col-l-3">
              <div class="btn-group">
                <button data-toggle="dropdown" class="btn btn-default dropdown-toggle">Vegetables <span class="caret"></span></button>
                <ul class="dropdown-menu">
                  <li><input type="radio" name="dropdown" data-argName="vegPotato" id="potato" value="--potato" /><label for="potato">Potato</label></li>
                  <li><input type="radio" name="dropdown" data-argName="vegCarrot" id="carrot" value="--carrot" /><label for="carrot">Carrot</label></li>
                  <li><input type="radio" name="dropdown" data-argName="vegCelery" id="celery" value="--celery" /><label for="celery">Celery</label></li>
                  <li><input type="radio" name="dropdown" data-argName="vegGinger" id="ginger" value="--ginger" /><label for="ginger">Ginger</label></li>
                </ul>
              </div>
            </div>
            <div class="col-xs-6 col-s-3 col-md-3 col-l-3">
              <select data-argName="dogSounds" class="form-control" required="required">
                <option value="">Dog Sounds</option>
                <option value="woof">Woof</option>
                <option value="bark">Bark</option>
                <option value="ruff">Ruff</option>
              </select>
            </div>
          </div>
          <div class="row">
            <div class="col-xs-6 col-s-6 col-md-6 col-l-6">
              <label>Browse for Folder:</label>
              <input type="file" nwdirectory="nwdirectory" data-argName="folderPicker" />
            </div>
            <div class="col-xs-6 col-s-6 col-md-6 col-l-6">
              <label>Color Picker:</label>
              <input type="color" data-argName="colorful" value="#000000" />
            </div>
          </div>

          <div class="row">
            <div class="col-xs-12 col-s-6 col-md-6 col-l-6">
              <label for="speed">Speed vs Quality:</label><br />
              <table>
                <tr>
                  <td class="text-center"><span>High Quality (Slower)</span></td>
                  <td><input class="slider" type="text" id="speed" data-argName="speedVsQuality" data-slider-id="speedSlider" data-slider-min="1" data-slider-max="11" data-slider-step="1" data-slider-value="6" /></td>
                  <td class="text-center"><span>Low Quality (Faster)</span></td>
                </tr>
              </table>
            </div>

            <div class="col-xs-12 col-s-6 col-md-6 col-l-6">
              <label for="speed">Quality:</label><br />
              <table>
                <tr>
                  <td class="text-center"><span>Minimum</span></td>
                  <td><input class="slider" type="text" id="quality" data-argName="quality" data-slider-id="qualitySlider" data-slider-min="0" data-slider-max="100" data-slider-step="25" data-slider-value="[0,100]" /></td>
                  <td class="text-center"><span>Maximum</span></td>
                </tr>
              </table>
            </div>
          </div>

          <div class="row">
            <div class="col-xs-12 col-s-12 col-md-12 col-l-12">
              <label for="message">Message:</label>
              <textarea id="message" class="form-control" required="required" data-argName="userMessage"></textarea>
            </div>
          </div>
          <div class="row">
            <div class="col-xs-12 col-s-12 col-md-12 col-l-12 text-right">
              <button type="submit" class="sendCmdArgs btn btn-default">Run!</button>
            </div>
          </div>

        </form>

        <hr />

        <form id="second_cli" role="form-inline">

          <div class="row">
            <div class="col-xs-12 col-s-12 col-md-12 col-l-12">
              <p>Prevent running the command unless the checkbox is checked and text filled in.</p>
            </div>
            <div class="col-xs-12 col-s-12 col-md-12 col-l-12">
              <div class="input-group">
                <span class="input-group-addon">
                  <input type="checkbox" data-argName="winewhite" value="-message" required="required" aria-label="winewhite" />
                </span>
                <input type="text" class="form-control" data-argName="winetext" required="required" aria-label="winewhite" />
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-xs-12 col-s-12 col-md-12 col-l-12">
              <p>Text output that would normally be returned to the command prompt, can be placed in elements with a <code>returnedCmdText</code> class.</p>
            </div>
            <div class="col-xs-12 col-s-12 col-md-12 col-l-12">
              <pre class="returnedCmdText">Returned text will be displayed here.</pre>
            </div>
          </div>
          <div class="row">
            <div class="col-xs-12 col-s-12 col-md-12 col-l-12 text-right">
              <button type="submit" class="sendCmdArgs btn btn-default">Go!</button>
            </div>
          </div>

        </form>


      </section>







      <!--
        /////////////////////////////////////////////////////////////////
        //                                                             //
        //                         ABOUT MODAL                         //
        //                                                             //
        /////////////////////////////////////////////////////////////////
        // This content is displayed when the user clicks Help in the  //
        // top navigation, then About. Some parts of the about modal   //
        // are automatically replaced by the content defined in your   //
        // package.json file, such as Application Name and Version.    //
        /////////////////////////////////////////////////////////////////
      -->

      <div id="aboutModal" class="modal">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <span class="glyphicon glyphicon-remove pull-right" data-dismiss="modal" aria-hidden="true"></span>
              <h4>About</h4>
            </div>
            <div class="modal-body">

              <div class="panel panel-primary">
                <div class="panel-heading">
                  <span class="pull-right versionApp" title="Version">V0.1.0</span>
                  <h3 class="panel-title">About <span class="applicationTitle">Your Application Name</span></h3>
                </div>
                <div class="panel-body">
                  <p class="well well-sm">
                    <!--
                      A detailed explanation of what your application does or is used for goes here.
                    -->
                  </p>
                  <p>
                    <span class="applicationTitle">Your Application Name</span> created by <span class="authorName">Your Name</span>.<br />
                    <!--
                      Be sure to credit whoever made the command line executable.<br />
                      You should probably <a href="http://theirsite.com" class="external-link">link to their site</a> and give a version number for the CLI program.
                    -->
                  </p>

                  <!--
                    This is the "Check for Updates" feature. If your app is publicly avaliable on GitHub
                    you can use it. Since this takes a few extra steps to set up, it is commented out by
                    default. See: http://ugui.io/api for more information about this feature.
                  -->
                  <!--
                    <p id="updateResults"></p>
                    <p class="text-center">
                      <button id="updateChecker" class="btn btn-primary">Check for updates</button>
                    </p>
                  -->
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>







    </div> <!-- end container -->
  </body>
</html>
